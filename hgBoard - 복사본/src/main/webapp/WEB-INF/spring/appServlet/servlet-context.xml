<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
  http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
  http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<!-- AOP 설정 -->
	<!-- 초기 빈 : aspect의 advice -->
	<beans:bean id="homeController" class="com.wi.bp.HomeController"></beans:bean>
	<aop:aspectj-autoproxy>
	</aop:aspectj-autoproxy>
	<!-- Aspect 설정 : Aspect중에서 advice(testAop) Joinpoint중에서 pointcut -->
	<aop:config>
		<aop:aspect id="aspT" ref="aop_test">
			<!-- public -->
			<!-- * : 무엇이있어도 상관없음 -->
			<!-- .. : 중간에 어떤 단계도 상관없음 -->
			<!-- (..) : 매개변수 상관없음 -->
			<!-- 포인트컷 -->
			<aop:pointcut
				expression="execution(public * com.mycom..*(..))" id="allMethod" />
			<!-- 핵심/공통메서 구분 pointcut-ref="핵심메서드대상" method="공통메서드이름" -->
			<aop:around pointcut-ref="allMethod" method="testAop" />
		</aop:aspect>
	</aop:config>


	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/res01/**" location="/res01/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<!-- 컨트롤러등 중요한 클래스를 스캔함 -->
	<context:component-scan
		base-package="com.wi.bp.." />

	<!-- FILE UPLOAD / FILE DOWNLOAD -->
	<!-- <beans:bean id="multipartResolver" -->
	<!-- class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> -->
	<!-- <beans:property name="maxUploadSize" value="100000000"></beans:property> -->
	<!-- </beans:bean> -->
	<!-- <beans:bean id="uploadPath" class="java.lang.String"> -->
	<!-- <beans:constructor-arg -->
	<!-- value="C:\\ws_s\\first_s\\upload"></beans:constructor-arg> -->
	<!-- </beans:bean> -->
	<!-- <beans:bean id="upath" class="java.lang.String"> -->
	<!-- <beans:constructor-arg -->
	<!-- value="C:\\ws_s\\first_s\\upload"></beans:constructor-arg> -->
	<!-- </beans:bean> -->
	<!-- <beans:bean id="upath_img" class="java.lang.String"> -->
	<!-- <beans:constructor-arg -->
	<!-- value="C:\\ws_s\\first_s\\uploadimgs"></beans:constructor-arg> -->
	<!-- </beans:bean> -->


	<!-- 타일즈를 위한 설정객체 : 설정 xml 지정 -->
	<!-- <beans:bean id="tilesConfigure" -->
	<!-- class="org.springframework.web.servlet.view.tiles3.TilesConfigurer"> -->
	<!-- <beans:property name="definitions"> -->
	<!-- <beans:list> -->
	<!-- <beans:value>/WEB-INF/views/**/tiles.xml</beans:value> -->
	<!-- </beans:list> -->
	<!-- </beans:property> -->
	<!-- </beans:bean> -->

	<beans:bean id="tilesViewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass"
			value="org.springframework.web.servlet.view.tiles3.TilesView">
		</beans:property>
		<beans:property name="order" value="1" />
	</beans:bean>

	<!-- ########### 마이바티스 설정 -->
	<!-- 오라클 접속정보 -->
	<beans:bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName"
			value="oracle.jdbc.OracleDriver"></beans:property>
		<beans:property name="url"
			value="jdbc:oracle:thin:@localhost:1521:orcl"></beans:property>
		<beans:property name="username" value="SHG"></beans:property>
		<beans:property name="password" value="Shg4821#"></beans:property>
	</beans:bean>

	<!-- 데이터소스로 쿼리실행 sqlSessionFactory -->
	<beans:bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource"></beans:property>
		<beans:property name="configLocation"
			value="classpath:mybatis-config.xml"></beans:property>
		<beans:property name="mapperLocations"
			value="classpath*:mapper/**/*Mapper.xml"></beans:property>
	</beans:bean>

	<beans:bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate"
		destroy-method="clearCache">
		<beans:constructor-arg name="sqlSessionFactory"
			ref="sqlSessionFactory"></beans:constructor-arg>
	</beans:bean>
</beans:beans>